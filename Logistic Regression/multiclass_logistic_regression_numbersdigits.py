# -*- coding: utf-8 -*-
"""Multiclass logistic regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zgKQ-5dPmcYoSLTeKBDMzHHsF68p5uzu
"""

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import os
# %matplotlib inline

from sklearn.datasets import load_digits

digits = load_digits()

dir(digits) #to get the name of the columns of the dataset and see kind of information

digits.data[0] #these are the digits of an element

plt.gray()
plt.matshow(digits.images[0])

digits.target[0:5]

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(digits.data, digits.target, test_size= 0.2)
# digits.data: dataset
# digits.target: target variable

from sklearn.linear_model import LogisticRegression
model = LogisticRegression()

model.fit(X_train, y_train)

model.score(X_test, y_test)

model.predict([digits.data[0]])

model.predict_proba([digits.data[0]])

#Confusion matrix
y_predicted = model.predict(X_test)
from sklearn.metrics import confusion_matrix

cm = confusion_matrix(y_test, y_predicted)
cm

import seaborn as sn
plt.figure(figsize=(10,7))
sn.heatmap(cm, annot=True)
plt.xlabel('Predicted')
plt.ylabel('Truth')